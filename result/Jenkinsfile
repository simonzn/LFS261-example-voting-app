pipeline {
    agent none
    stages{
      stage('build'){
          when {
            changeset '**/result/**'
          }
          agent any
          tools {
            nodejs 'nodejs 22.4.0'
          }
          steps{
              echo 'building result app'
              dir('result'){
                sh 'npm install'
              }
          }
        }
        stage('test'){
          when {
            changeset '**/result/**'
          }
          agent any
          tools {
            nodejs 'nodejs 22.4.0'
          }
          steps{
              echo 'running unit tests on result app'
               dir('result'){
                sh 'npm test'
              }
          }
        }
        stage('docker image'){
          agent any
          steps{
            dir('result'){
              echo 'packaging result app as image'
              script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                  def workerImage=docker.build("simonzn/result:v${env.BUILD_ID}", ".")
                  workerImage.push()
                  workerImage.push("latest")
                }
              }
            }
          }
        }
    }
    post{
      always{
        echo 'the job is complete'
      }
      failure{
        slackSend (channel: "#lfs261", message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
      }
      success{
        slackSend (channel: "#lfs261", message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
      }
    }
}
